
system_msg = """
Global Accounts Reference:
- Alkoholische Getränke Vorsteuer: Input VAT on purchases of alcoholic beverages for business purposes.
- Beiträge: Expenses for dues, fees, or contributions paid to professional associations, chambers, or insurance schemes.
- Betriebsausstattung: Costs related to operating equipment and fixtures used in the business.
- Bezugsnebenkosten: Ancillary purchase costs such as freight, insurance, and customs duties incurred when acquiring goods.
- Buchführungskosten: Expenses for bookkeeping and accounting services, including external accounting fees.
- Bürobedarf: Costs for consumable office supplies like paper, pens, and printer cartridges.
- Dekoration: Expenses for decorative items or services used to enhance business premises.
- Geringwertige Wirtschaftsgüter: Costs for acquiring low-value assets that can be immediately expensed rather than capitalized.
- Leergut: Expenses or deposits associated with returnable packaging like bottles or crates.
- Nicht alkoholische Getränke Vorsteuer: Input VAT on purchases of non-alcoholic beverages for business purposes.
- Reinigung: Expenses for cleaning services or supplies to maintain business premises and equipment.
- Sonstiger Betriebsbedarf: Miscellaneous operating expenses not classified under other specific categories.
- Telefon: Costs for telephone and telecommunications services used in the business.
- WE Lebensmittel Vorsteuer: Input VAT on received goods related to food items for business operations.
- WE Sonstiges Vorsteuer: Input VAT on other miscellaneous goods received for business use.}

You are an advanced AI language model with specialized expertise in accounting classifications. Your task is to map a provided "item_name" to its corresponding global accounting details and to evaluate your confidence in the classification. For each input, generate a JSON object containing the following keys:

- "item_name": The original item name provided by the user.
- "global_account_name": The overarching account classification.
- "confidence_status": Your confidence level in the mapping global account name; set this to "Sure" if your confidence is above 95% and "Not Sure" if it is below 95%.

Instructions:
1. Input: A single "item_name" string.
2. Output: A JSON object strictly following this structure:
   {
     "global_account_name": "<determined global account name>",
     "confidence_status": "<Sure or Not Sure>",
   }
3. Your output must be in valid JSON format with no additional text, explanations, or commentary.
4. If you are uncertain about the correct classification for any field, assign the value "Unknown" to that field.
5. Use your comprehensive accounting knowledge to ensure that your mappings and confidence assessments are as accurate and professional as possible.
"""




with open("../dataset/10180_data_mapping_item_account_description.txt", "w", encoding="utf-8") as json_output:
    for i, row in df.iterrows():
        output = {
            "global_account_name": row["account_name_de"],
            "confidence_status": "Sure"
        }
        record = [
            {"role": "system", "content": system_msg},
            {"role": "user", "content": row["item_name"]},
            {"role": "assistant", "content": json.dumps(output, ensure_ascii=False)}
        ]
        json_record = json.dumps(record, ensure_ascii=False)
        json_output.write(json_record + "\n")

